#include "state_settings.h"

#include "state.h"
#include "buttons.h"
#include "ui_menu.h"
#include "ui.h"


//TODO: Move menu icons to separate header/cpp file.
static const unsigned char diversityIcon [] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x01, 0xF8, 0x0E, 0x00, 0x01, 0xFC, 0x1F, 0x00, 0x01, 0xCE,
	0x1F, 0x02, 0x21, 0xCE, 0x3B, 0x86, 0x31, 0xCC, 0x3B, 0x8F, 0xF9, 0xF8, 0x7B, 0xDF, 0xFD, 0xFE,
	0x71, 0xCF, 0xF9, 0xC7, 0x7F, 0xC6, 0x31, 0xC7, 0xFF, 0xE2, 0x21, 0xC7, 0xE0, 0xE0, 0x01, 0xFE,
	0xC0, 0x70, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char rssiIcon [] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x0F, 0x3C, 0x00, 0x00, 0x0F, 0x3C, 0x00, 0x00, 0x0F, 0x3C, 0x00, 0x00, 0x0F, 0x3C,
	0x00, 0x00, 0x0F, 0x3C, 0x00, 0x00, 0x0F, 0x3C, 0x00, 0x03, 0xCF, 0x3C, 0x00, 0x03, 0xCF, 0x3C,
	0x00, 0x03, 0xCF, 0x3C, 0x00, 0x03, 0xCF, 0x3C, 0x00, 0x03, 0xCF, 0x3C, 0x00, 0x03, 0xCF, 0x3C,
	0x00, 0xF3, 0xCF, 0x3C, 0x00, 0xF3, 0xCF, 0x3C, 0x00, 0xF3, 0xCF, 0x3C, 0x00, 0xF3, 0xCF, 0x3C,
	0x3C, 0xF3, 0xCF, 0x3C, 0x3C, 0xF3, 0xCF, 0x3C, 0x3C, 0xF3, 0xCF, 0x3C, 0x3C, 0xF3, 0xCF, 0x3C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char exitIcon [] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x03, 0xFF, 0xB9, 0xC0, 0x03, 0xFF, 0xBC, 0xC0,
	0x03, 0x00, 0x3E, 0x40, 0x03, 0x00, 0x3F, 0x40, 0x03, 0x00, 0x3F, 0x40, 0x03, 0x00, 0x3F, 0x40,
	0x03, 0x00, 0x3F, 0x40, 0x03, 0x00, 0x3F, 0x40, 0x02, 0x00, 0x3F, 0x40, 0x02, 0xF0, 0x3F, 0x40,
	0x02, 0x78, 0x3F, 0x40, 0x00, 0x3C, 0x3F, 0x40, 0x3F, 0xFE, 0x3F, 0x40, 0x3F, 0xFF, 0x3F, 0x40,
	0x3F, 0xFF, 0x31, 0x40, 0x3F, 0xFE, 0x33, 0x40, 0x00, 0x3C, 0x3F, 0x40, 0x02, 0x78, 0x3F, 0x40,
	0x02, 0xF0, 0x3F, 0x40, 0x02, 0x00, 0x3F, 0x40, 0x03, 0x00, 0x3F, 0x40, 0x03, 0x00, 0x3F, 0x40,
	0x03, 0x00, 0x3F, 0x40, 0x03, 0x00, 0x3F, 0x40, 0x03, 0x00, 0x3F, 0x40, 0x03, 0x7F, 0xBF, 0x40,
	0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char callsignIcon [] = {
	0x00, 0x3F, 0xFC, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x03, 0xE0, 0x0F, 0xC0, 0x07, 0x80, 0x03, 0xE0,
	0x0F, 0x80, 0x01, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x80, 0x01, 0xF0,
	0x07, 0xC0, 0x03, 0xE0, 0x01, 0xFC, 0x3F, 0x80, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x0F, 0xF0, 0x00,
	0x1F, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0xFF, 0xFE, 0xF8, 0x00, 0x00, 0x1E, 0xF0, 0x00, 0x00, 0x0E,
	0xF0, 0x00, 0x00, 0x0E, 0xF0, 0x00, 0x00, 0x0E, 0xF0, 0xF0, 0x0F, 0x0E, 0xF0, 0xF0, 0x0F, 0x0E,
	0xF0, 0xF0, 0x0F, 0x0E, 0x7C, 0xF0, 0x0F, 0x3E, 0x3F, 0xF0, 0x0F, 0xFC, 0x07, 0xF0, 0x0F, 0xE0,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00
};

static const unsigned char starIcon [] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x00,
	0x00, 0x03, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00,
	0x00, 0x07, 0xE0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x7F, 0xFF, 0xFF, 0xFE,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFF, 0xFF, 0xFC, 0x1F, 0xFF, 0xFF, 0xF8,
	0x0F, 0xFF, 0xFF, 0xF0, 0x03, 0xFF, 0xFF, 0xC0, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0x7F, 0xFE, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0x01, 0xFF, 0xFF, 0x80, 0x01, 0xFE, 0x7F, 0x80, 0x01, 0xFC, 0x3F, 0x80, 0x03, 0xF8, 0x1F, 0xC0,
	0x03, 0xE0, 0x07, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00
};

static void diveristyModeMenuHandler();
static void rssiCalibrationMenuHandler();
static void callsignMenuHandler();
static void exitMenuHandler();
static void favouritesSettingsMenuHandler();

void StateMachine::SettingsStateHandler::onEnter() {
	this->menu.reset();
	this->menu.addItem("RSSI Cal", rssiIcon, rssiCalibrationMenuHandler);
	this->menu.addItem("Div. Mode", diversityIcon, diveristyModeMenuHandler);
	this->menu.addItem("Favourites", starIcon, favouritesSettingsMenuHandler);
#ifdef CALLSIGN
	this->menu.addItem("Callsign", callsignIcon, callsignMenuHandler);
#endif
	this->menu.addItem("Exit", exitIcon, exitMenuHandler);
}

void StateMachine::SettingsStateHandler::onExit() {

}

void StateMachine::SettingsStateHandler::onUpdate() {

}

void StateMachine::SettingsStateHandler::onButtonChange(
    Button button,
    Buttons::PressType pressType
) {
    if (pressType != Buttons::PressType::SHORT)
        return;

    switch (button) {
        case Button::UP:
            this->menu.selectPreviousItem();
            Ui::needUpdate();
            break;

        case Button::DOWN:
            this->menu.selectNextItem();
            Ui::needUpdate();
            break;

        case Button::MODE:
            this->menu.activateItem();
            break;
    }
}

static void diveristyModeMenuHandler() {
	StateMachine::switchState(StateMachine::State::SETTINGS_DIVERSITY_MODE);
}

static void rssiCalibrationMenuHandler(){
	StateMachine::switchState(StateMachine::State::SETTINGS_RSSI);
}

static void callsignMenuHandler(){
	StateMachine::switchState(StateMachine::State::SETTINGS_CALLSIGN);
}

static void exitMenuHandler(){
	StateMachine::switchState(StateMachine::State::MENU);
}

static void favouritesSettingsMenuHandler(){
	StateMachine::switchState(StateMachine::State::SETTINGS_FAVOURITES);
}
